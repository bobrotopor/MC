##############################################################################
#                                                                            #
#                                                      28/Jun/2007  00:57:51 #
# IAR Atmel AVR C/C++ Compiler V4.10A/W32, Evaluation Version                #
# Copyright 1996-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Source file  =  D:\stend\src\m162\DS1820.c                              #
#    Command line =  --cpu=m162 -ms -o D:\stend\src\m162\Release\Obj\ -D     #
#                    NDEBUG -lcN D:\stend\src\m162\Release\List\ -lb         #
#                    D:\stend\src\m162\Release\List\ -y                      #
#                    --initializers_in_flash -z9 -e -I "D:\Program           #
#                    Files\IAR Systems\AVR4.10A\avr\INC\" -I "D:\Program     #
#                    Files\IAR Systems\AVR4.10A\avr\INC\CLIB\"               #
#                    --eeprom_size 512 D:\stend\src\m162\DS1820.c            #
#    List file    =  D:\stend\src\m162\Release\List\DS1820.lst               #
#    Object file  =  D:\stend\src\m162\Release\Obj\DS1820.r90                #
#                                                                            #
#                                                                            #
##############################################################################

D:\stend\src\m162\DS1820.c
      1          #include "DS1820.h"
      2          #include "DELAY.h"
      3          #include "CONVERT.H"
      4          
      5          // Функция сброса
      6          // Возвращает 1 если на шине 1-Wire присутствует устройство
      7          // 			  0 если устройств нет
      8          unsigned char DS1820_reset()				
      9          {
     10          	DS_BUS_PORT = 0;
     11          	DS_BUS_DDR = 0;
     12          	DELAY_MCS( 6 );
     13          	DS_BUS_DDR = 1;
     14          	DELAY_MCS( 530 );
     15          	DS_BUS_DDR = 0;
     16          	DELAY_MCS( 80 );
     17          	if( DS_BUS_PIN )
     18          		return 0;
     19          	else
     20          	{
     21          		DELAY_MCS( 420 );
     22          		return 1;
     23          	}
     24          } 							
     25          
     26          // Функция записи/чтения байта линии 1-Wire
     27          // Для чтения необходимо передать в качестве параметра 0xFF
     28          unsigned char DS1820_rw( unsigned char data )
     29          {
     30          	register unsigned char i;
     31          
     32          	DS_BUS_PORT = 0;
     33          	DS_BUS_DDR = 0;	
     34          	for ( i = 0; i <= 7; i++ ) 
     35          	{
     36          		DS_BUS_DDR = 1;
     37          		DELAY_MCS( 2 );
     38          		
     39          		if( data & 0x01 )
     40          			DS_BUS_DDR = 0;
     41          		else
     42          			DS_BUS_DDR = 1;
     43          
     44          		DELAY_MCS( 8 );
     45          
     46          		data >>= 1;
     47          
     48          		if( DS_BUS_PIN )
     49          			data |= ( 1 << 7 );
     50          		else
     51          			data &= ~( 1 << 7 );
     52          				
     53          		DELAY_MCS( 55 );
     54          		DS_BUS_DDR = 0;
     55          		DELAY_MCS( 6 );
     56          	}
     57          
     58          	return data; 
     59          }
     60          
     61          // Функция старта преобразования температуры
     62          unsigned char DS1820_startconverttemp()
     63          {
     64          	if( !DS1820_reset() )		// Если на шине никого нет
     65          		return 0;			
     66          
     67              DS1820_rw( 0xcc );  		// Пропускаем ROM
     68              DS1820_rw( 0x44 );  		// Выводим команду преобразования температуры
     69          	
     70          	return 1;
     71          }
     72          
     73          // Функция проверки статуса преобразования температуры
     74          unsigned char DS1820_getconvertstatus()
     75          {
     76          	if( DS1820_rw( 0xFF ) != 0x00 )	// Проверяем состояние линии
     77          		return 1;
     78          	else
     79          		return 0;
     80          }
     81          
     82          // Функция чтения данных из памяти микросхемы DS1820
     83          unsigned char DS1820_readdata(unsigned char* buff)
     84          {
     85          	unsigned char n;
     86          
     87          	if( !DS1820_reset() )
     88          		return 0;
     89          
     90              DS1820_rw( 0xcc );  			// Пропускаем ROM
     91              DS1820_rw( 0xbe );  			// Выводим функцию чтения данных памяти
     92              
     93              for (n = 0; n < 9; n++)     	// Читаем 9 байт памяти
     94                 buff[ n ] = DS1820_rw( 0xFF ); 
     95          
     96          	return 1;
     97          }
     98          
     99          // Функция получения значения температуры
    100          unsigned char DS1820_gettemperature( char strTemp[] )
    101          {
    102          	unsigned char buff[ 9 ];
    103          	signed short temperature;
    104          
    105          	if( !DS1820_getconvertstatus() )
    106          		return 1;
    107          
    108          	if( !DS1820_readdata( buff ) )
    109          		return 0;
    110          	
    111          	temperature = buff[ 1 ];
    112          	temperature <<= 8;
    113          	temperature = buff[ 0 ];
    114          
    115          	unsigned char intLen = ShortToString( temperature / 2, strTemp );
    116          	strTemp[ intLen ] = '.';
    117          	strTemp[ intLen + 1 ] = ( temperature & 0x01 ) ? '5' : '0';
    118          	strTemp[ intLen + 2 ] = 0;
    119          
    120          	return 2;
    121          }

   Maximum stack usage in bytes:

     Function                     CSTACK RSTACK
     --------                     ------ ------
     DS1820_getconvertstatus          0      2
       -> DS1820_rw                   0      2
     DS1820_gettemperature           15      4
       -> DS1820_getconvertstatus    15      2
       -> DS1820_readdata            15      2
       -> ShortToString              15      2
     DS1820_readdata                  4      2
       -> DS1820_reset                4      2
       -> DS1820_rw                   4      2
       -> DS1820_rw                   4      2
       -> DS1820_rw                   4      2
     DS1820_reset                     0      2
       -> delay_func_mcs              0      2
       -> delay_func_mcs              0      2
       -> delay_func_mcs              0      2
       -> delay_func_mcs              0      2
     DS1820_rw                        2      2
       -> delay_func_mcs              2      2
       -> delay_func_mcs              2      2
       -> delay_func_mcs              2      2
       -> delay_func_mcs              2      2
     DS1820_startconverttemp          0      2
       -> DS1820_reset                0      2
       -> DS1820_rw                   0      2
       -> DS1820_rw                   0      2


   Segment part sizes:

     Function/Label          Bytes
     --------------          -----
     DS1820_reset              28
     ?Subroutine3               4
     ?Subroutine0               6
     ?Subroutine2               4
     ?Subroutine4               4
     DS1820_rw                 56
     DS1820_startconverttemp   16
     ?Subroutine1               4
     DS1820_getconvertstatus   10
     DS1820_readdata           52
     DS1820_gettemperature     84
     _A_PORTA                   1
     _A_DDRA                    1
     _A_PINA                    1

 
   3 bytes in segment ABSOLUTE
 268 bytes in segment CODE
 
 268 bytes of CODE memory
   0 bytes of DATA memory (+ 3 bytes shared)

Errors: none
Warnings: none
