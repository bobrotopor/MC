##############################################################################
#                                                                            #
#                                                      28/Jun/2007  00:57:48 #
# IAR Atmel AVR C/C++ Compiler V4.10A/W32, Evaluation Version                #
# Copyright 1996-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Source file  =  D:\stend\src\m162\DELAY.c                               #
#    Command line =  --cpu=m162 -ms -o D:\stend\src\m162\Release\Obj\ -D     #
#                    NDEBUG -lcN D:\stend\src\m162\Release\List\ -lb         #
#                    D:\stend\src\m162\Release\List\ -y                      #
#                    --initializers_in_flash -z9 -e -I "D:\Program           #
#                    Files\IAR Systems\AVR4.10A\avr\INC\" -I "D:\Program     #
#                    Files\IAR Systems\AVR4.10A\avr\INC\CLIB\"               #
#                    --eeprom_size 512 D:\stend\src\m162\DELAY.c             #
#    List file    =  D:\stend\src\m162\Release\List\DELAY.lst                #
#    Object file  =  D:\stend\src\m162\Release\Obj\DELAY.r90                 #
#                                                                            #
#                                                                            #
##############################################################################

D:\stend\src\m162\DELAY.c
      1          #include "DELAY.H"
      2          
      3          // Вспомогательная функция для выполнения задержки
      4          void delay_func_mcs( unsigned short count)
      5          {
      6          	while( count-- > 0 );
      7          }
      8          
      9          // Вспомогательная функция для выполнения задержки
     10          void delay_func_ms( unsigned short count)
     11          {
     12          	while( count-- > 0 )
     13          		DELAY_MCS( 100 );
     14          }

   Maximum stack usage in bytes:

     Function            CSTACK RSTACK
     --------            ------ ------
     delay_func_mcs          0      2
     delay_func_ms           2      2
       -> delay_func_mcs     2      2


   Segment part sizes:

     Function/Label     Bytes
     --------------     -----
     ??delay_func_mcs_0   12
     delay_func_ms        28

 
 40 bytes in segment CODE
 
 40 bytes of CODE memory

Errors: none
Warnings: none
