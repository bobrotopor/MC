//////////////////////////////////////////////////////////////////////////////
//                                                                           /
//                                                     21/May/2007  11:44:14 /
// IAR Atmel AVR C/C++ Compiler V4.10A/W32, Evaluation Version               /
// Copyright 1996-2005 IAR Systems. All rights reserved.                     /
//                                                                           /
//    Source file  =  D:\stend\src\m16\Main.c                                /
//    Command line =  --cpu=m16 -mt -o D:\stend\src\m16\Debug\Obj\ -lb       /
//                    D:\stend\src\m16\Debug\List\ --initializers_in_flash   /
//                    -z3 --no_cse --no_inline --no_code_motion              /
//                    --no_cross_call --no_clustering --no_tbaa --debug -e   /
//                    -I "D:\Program Files\IAR Systems\AVR4.10A\avr\INC\"    /
//                    -I "D:\Program Files\IAR Systems\AVR4.10A\avr\INC\CLIB /
//                    \" --eeprom_size 512 D:\stend\src\m16\Main.c           /
//    List file    =  D:\stend\src\m16\Debug\List\Main.s90                   /
//                                                                           /
//                                                                           /
//////////////////////////////////////////////////////////////////////////////

        NAME Main

        RSEG CSTACK:DATA:NOROOT(0)
        RSEG RSTACK:DATA:NOROOT(0)

        EXTERN ?CV_SWITCH_L06
        EXTERN ?UC_DIVMOD_L01
        EXTERN ?need_segment_init

        PUBWEAK `?<Segment init: TINY_I>`
        PUBWEAK `?<Segment init: TINY_Z>`
        PUBWEAK `??INTVEC 44`
        PUBLIC AutonomousMode
        PUBLIC ExecuteTask1
        PUBLIC ExecuteTask2
        PUBLIC ExecuteTask3
        PUBLIC ExecuteTask4
        PUBLIC ExecuteTask5
        PUBLIC ExecuteTask6
        PUBLIC ExecuteTask7
        PUBLIC ExecuteTask8
        PUBLIC ExecuteTask9
        PUBLIC LcdMessageLine1
        PUBLIC LcdMessageLine2
        PUBLIC OutputStartLCDMessage
        PUBLIC UART0_RX_interrupt
        PUBLIC UartMessage
        PUBWEAK _A_DDRD
        PUBWEAK _A_PORTD
        PUBWEAK __?EEARH
        PUBWEAK __?EEARL
        PUBWEAK __?EECR
        PUBWEAK __?EEDR
        PUBLIC dateStr
        PUBLIC enterAddressStr
        PUBLIC enterDayStr
        PUBLIC enterHourStr
        PUBLIC enterMinuteStr
        PUBLIC enterMonthStr
        PUBLIC enterSecondStr
        PUBLIC enterValueStr
        PUBLIC enterYearStr
        PUBLIC main
        PUBLIC sensorNotConnectedStr
        PUBLIC temperatureStr
        PUBLIC timeStr
        PUBLIC valueStr

        EXTERN LCD_clrscr
        EXTERN KEY_waitforkeyrelease
        EXTERN KEY_getkey
        EXTERN KEY_getkeyname
        EXTERN LCD_printchar
        EXTERN LCD_gotoxy
        EXTERN LED7_setdigit
        EXTERN Beep
        EXTERN DS1307_gettime
        EXTERN DS1307_getdate
        EXTERN UART_sendstring_flash
        EXTERN UART_sendstring
        EXTERN UART_sendcrlf
        EXTERN UART_receivevalue
        EXTERN DS1307_settime
        EXTERN DS1307_setdate
        EXTERN AT24CXX_write
        EXTERN AT24CXX_read
        EXTERN UART_sendvalue
        EXTERN DS1820_startconverttemp
        EXTERN DS1820_getconvertstatus
        EXTERN DS1820_gettemperature
        EXTERN LCD_print_flash
        EXTERN LCD_print
        EXTERN ADC_get
        EXTERN ShortToString
        EXTERN I2C_init
        EXTERN SPI_init
        EXTERN LCD_init
        EXTERN UART_init
        EXTERN delay_func_ms
        EXTERN SHIFT_write


        RSEG NEAR_F:CODE:NOROOT(0)
UartMessage:
        DB 20H, 20H, 20H, 20H, 20H, 20H, 20H, 20H
        DB 20H, 20H, 20H, 20H, 20H, 20H, 20H, 20H
        DB 2DH, 3DH, 20H, 20H, 53H, 54H, 45H, 4EH
        DB 44H, 20H, 52H, 4BH, 2DH, 31H, 30H, 20H
        DB 20H, 3DH, 2DH, 0DH, 0AH, 20H, 20H, 20H
        DB 20H, 20H, 20H, 20H, 48H, 61H, 72H, 64H
        DB 77H, 61H, 72H, 65H, 20H, 76H, 65H, 72H
        DB 2EH, 20H, 31H, 2EH, 30H, 2CH, 20H, 46H
        DB 69H, 72H, 6DH, 77H, 61H, 72H, 65H, 20H
        DB 76H, 65H, 72H, 2EH, 20H, 32H, 2EH, 30H
        DB 0DH, 0AH, 0

        RSEG NEAR_F:CODE:NOROOT(0)
LcdMessageLine1:
        DB 45, 61, 67, 84, 69, 72, 224, 32, 32, 80, 75, 45, 49, 48, 61, 45, 0

        RSEG NEAR_F:CODE:NOROOT(0)
LcdMessageLine2:
        DB "   Ver. 2.0"

        RSEG NEAR_F:CODE:NOROOT(0)
timeStr:
        DB "Time: "

        RSEG NEAR_F:CODE:NOROOT(0)
dateStr:
        DB "Date: "

        RSEG NEAR_F:CODE:NOROOT(0)
enterAddressStr:
        DB "Enter address(0..255): "

        RSEG NEAR_F:CODE:NOROOT(0)
enterValueStr:
        DB "Enter value(0..255): "

        RSEG NEAR_F:CODE:NOROOT(0)
valueStr:
        DB "Value: "

        RSEG NEAR_F:CODE:NOROOT(0)
temperatureStr:
        DB "Temperature: "

        RSEG NEAR_F:CODE:NOROOT(0)
enterHourStr:
        DB "Enter hour: "

        RSEG NEAR_F:CODE:NOROOT(0)
enterMinuteStr:
        DB "Enter minute: "

        RSEG NEAR_F:CODE:NOROOT(0)
enterSecondStr:
        DB "Enter second: "

        RSEG NEAR_F:CODE:NOROOT(0)
enterDayStr:
        DB "Enter day: "

        RSEG NEAR_F:CODE:NOROOT(0)
enterMonthStr:
        DB "Enter month: "

        RSEG NEAR_F:CODE:NOROOT(0)
enterYearStr:
        DB "Enter year: "

        RSEG NEAR_F:CODE:NOROOT(0)
sensorNotConnectedStr:
        DB "Sensor is not connected"

        RSEG CODE:CODE:NOROOT(1)
ExecuteTask1:
        ST	-Y, R25
        ST	-Y, R24
        LDI	R25, 0
        LDI	R24, 0
        CALL	LCD_clrscr
        RJMP	??ExecuteTask1_0
??ExecuteTask1_1:
        CPI	R25, 24
        BRNE	??ExecuteTask1_2
        CALL	LCD_clrscr
        LDI	R24, 0
??ExecuteTask1_2:
        CALL	KEY_waitforkeyrelease
??ExecuteTask1_0:
        CPI	R25, 72
        BREQ	??ExecuteTask1_3
        CALL	KEY_getkey
        MOV	R25, R16
        TST	R25
        BREQ	??ExecuteTask1_0
        MOV	R16, R25
        CALL	KEY_getkeyname
        CPI	R16, 48
        BRCS	??ExecuteTask1_1
        CPI	R16, 58
        BRCC	??ExecuteTask1_1
        CALL	LCD_printchar
        INC	R24
        CPI	R24, 16
        BRNE	??ExecuteTask1_2
        LDI	R17, 1
        LDI	R16, 0
        CALL	LCD_gotoxy
        RJMP	??ExecuteTask1_2
??ExecuteTask1_3:
        LD	R24, Y+
        LD	R25, Y+
        RET

        RSEG CODE:CODE:NOROOT(1)
ExecuteTask2:
        ST	-Y, R24
        LDI	R24, 0
        RJMP	??ExecuteTask2_0
??ExecuteTask2_1:
        CALL	KEY_getkey
        MOV	R24, R16
        TST	R24
        BREQ	??ExecuteTask2_0
        MOV	R16, R24
        CALL	KEY_getkeyname
        SUBI	R16, 48
        CALL	LED7_setdigit
        CALL	KEY_waitforkeyrelease
??ExecuteTask2_0:
        CPI	R24, 72
        BRNE	??ExecuteTask2_1
        LD	R24, Y+
        RET

        RSEG CODE:CODE:NOROOT(1)
ExecuteTask3:
        ST	-Y, R24
        LDI	R24, 0
        RJMP	??ExecuteTask3_0
??ExecuteTask3_1:
        CALL	KEY_getkey
        MOV	R24, R16
        TST	R24
        BREQ	??ExecuteTask3_0
        LDI	R16, 100
        LDI	R17, 0
        CALL	Beep
        CALL	KEY_waitforkeyrelease
??ExecuteTask3_0:
        CPI	R24, 72
        BRNE	??ExecuteTask3_1
        LD	R24, Y+
        RET

        RSEG CODE:CODE:NOROOT(1)
ExecuteTask4:
        ST	-Y, R24
        LDI	R24, 0
        RJMP	??ExecuteTask4_0
??ExecuteTask4_1:
        IN	R16, 0x12
        MOV	R17, R16
        SBRS	R17, 7
        SBI	0x12, 0x07
??ExecuteTask4_2:
        SBRC	R17, 7
        CBI	0x12, 0x07
??ExecuteTask4_3:
        CALL	KEY_waitforkeyrelease
??ExecuteTask4_0:
        CPI	R24, 72
        BREQ	??ExecuteTask4_4
        CALL	KEY_getkey
        MOV	R24, R16
        TST	R24
        BREQ	??ExecuteTask4_0
        MOV	R16, R24
        CALL	KEY_getkeyname
        SUBI	R16, 49
        BREQ	??ExecuteTask4_5
        DEC	R16
        BREQ	??ExecuteTask4_6
        DEC	R16
        BREQ	??ExecuteTask4_1
        RJMP	??ExecuteTask4_3
??ExecuteTask4_5:
        IN	R16, 0x12
        MOV	R17, R16
        SBRS	R17, 4
        SBI	0x12, 0x04
??ExecuteTask4_7:
        SBRC	R17, 4
        CBI	0x12, 0x04
??ExecuteTask4_8:
        RJMP	??ExecuteTask4_3
??ExecuteTask4_6:
        IN	R16, 0x12
        MOV	R17, R16
        SBRS	R17, 5
        SBI	0x12, 0x05
??ExecuteTask4_9:
        SBRC	R17, 5
        CBI	0x12, 0x05
??ExecuteTask4_10:
        RJMP	??ExecuteTask4_3
??ExecuteTask4_4:
        LD	R24, Y+
        RET

        RSEG CODE:CODE:NOROOT(1)
ExecuteTask5:
        SUBI	R28, 18
        MOV	R16, R28
        SUBI	R16, 247
        CALL	DS1307_gettime
        MOV	R16, R28
        CALL	DS1307_getdate
        LDI	R16, LOW(timeStr)
        LDI	R17, (timeStr) >> 8
        CALL	UART_sendstring_flash
        MOV	R16, R28
        SUBI	R16, 247
        CALL	UART_sendstring
        CALL	UART_sendcrlf
        LDI	R16, LOW(dateStr)
        LDI	R17, (dateStr) >> 8
        CALL	UART_sendstring_flash
        MOV	R16, R28
        CALL	UART_sendstring
        CALL	UART_sendcrlf
        SUBI	R28, 238
        RET

        RSEG CODE:CODE:NOROOT(1)
ExecuteTask6:
        ST	-Y, R25
        ST	-Y, R24
        LDI	R16, LOW(enterHourStr)
        LDI	R17, (enterHourStr) >> 8
        CALL	UART_sendstring_flash
        CALL	UART_receivevalue
        MOV	R25, R16
        LDI	R16, LOW(enterMinuteStr)
        LDI	R17, (enterMinuteStr) >> 8
        CALL	UART_sendstring_flash
        CALL	UART_receivevalue
        MOV	R24, R16
        LDI	R16, LOW(enterSecondStr)
        LDI	R17, (enterSecondStr) >> 8
        CALL	UART_sendstring_flash
        CALL	UART_receivevalue
        MOV	R18, R16
        MOV	R17, R24
        MOV	R16, R25
        CALL	DS1307_settime
        LDI	R16, LOW(enterDayStr)
        LDI	R17, (enterDayStr) >> 8
        CALL	UART_sendstring_flash
        CALL	UART_receivevalue
        MOV	R25, R16
        LDI	R16, LOW(enterMonthStr)
        LDI	R17, (enterMonthStr) >> 8
        CALL	UART_sendstring_flash
        CALL	UART_receivevalue
        MOV	R24, R16
        LDI	R16, LOW(enterYearStr)
        LDI	R17, (enterYearStr) >> 8
        CALL	UART_sendstring_flash
        CALL	UART_receivevalue
        MOV	R18, R16
        MOV	R17, R24
        MOV	R16, R25
        CALL	DS1307_setdate
        LD	R24, Y+
        LD	R25, Y+
        RET

        RSEG CODE:CODE:NOROOT(1)
ExecuteTask7:
        ST	-Y, R24
        LDI	R16, LOW(enterAddressStr)
        LDI	R17, (enterAddressStr) >> 8
        CALL	UART_sendstring_flash
        CALL	UART_receivevalue
        MOV	R24, R16
        LDI	R16, LOW(enterValueStr)
        LDI	R17, (enterValueStr) >> 8
        CALL	UART_sendstring_flash
        CALL	UART_receivevalue
        MOV	R17, R16
        MOV	R16, R24
        CALL	AT24CXX_write
        LD	R24, Y+
        RET

        RSEG CODE:CODE:NOROOT(1)
ExecuteTask8:
        ST	-Y, R24
        LDI	R16, LOW(enterAddressStr)
        LDI	R17, (enterAddressStr) >> 8
        CALL	UART_sendstring_flash
        CALL	UART_receivevalue
        MOV	R24, R16
        LDI	R16, LOW(valueStr)
        LDI	R17, (valueStr) >> 8
        CALL	UART_sendstring_flash
        MOV	R16, R24
        CALL	AT24CXX_read
        CALL	UART_sendvalue
        CALL	UART_sendcrlf
        LD	R24, Y+
        RET

        RSEG CODE:CODE:NOROOT(1)
ExecuteTask9:
        SUBI	R28, 5
        CALL	DS1820_startconverttemp
        TST	R16
        BRNE	??ExecuteTask9_0
        LDI	R16, LOW(sensorNotConnectedStr)
        LDI	R17, (sensorNotConnectedStr) >> 8
        CALL	UART_sendstring_flash
        CALL	UART_sendcrlf
        RJMP	??ExecuteTask9_1
??ExecuteTask9_0:
        CALL	DS1820_getconvertstatus
        TST	R16
        BREQ	??ExecuteTask9_0
        MOV	R16, R28
        CALL	DS1820_gettemperature
        TST	R16
        BREQ	??ExecuteTask9_1
        LDI	R16, LOW(temperatureStr)
        LDI	R17, (temperatureStr) >> 8
        CALL	UART_sendstring_flash
        MOV	R16, R28
        CALL	UART_sendstring
        CALL	UART_sendcrlf
??ExecuteTask9_1:
        SUBI	R28, 251
        RET

        RSEG CODE:CODE:NOROOT(1)
OutputStartLCDMessage:
        LDI	R16, LOW(LcdMessageLine1)
        LDI	R17, (LcdMessageLine1) >> 8
        CALL	LCD_print_flash
        LDI	R17, 1
        LDI	R16, 0
        CALL	LCD_gotoxy
        LDI	R16, LOW(LcdMessageLine2)
        LDI	R17, (LcdMessageLine2) >> 8
        CALL	LCD_print_flash
        RET

        RSEG CODE:CODE:NOROOT(1)
UART0_RX_interrupt:
        ST	-Y, R24
        ST	-Y, R31
        ST	-Y, R30
        ST	-Y, R3
        ST	-Y, R2
        ST	-Y, R1
        ST	-Y, R0
        ST	-Y, R23
        ST	-Y, R22
        ST	-Y, R21
        ST	-Y, R20
        ST	-Y, R19
        ST	-Y, R18
        ST	-Y, R17
        ST	-Y, R16
        IN	R24, 0x3F
        CALL	UART_receivevalue
        LDI	R30, LOW(`?<Jumptable for UART0_RX_interrupt>_0`)
        LDI	R31, (`?<Jumptable for UART0_RX_interrupt>_0`) >> 8
        JMP	?CV_SWITCH_L06
??UART0_RX_interrupt_0:
        RCALL	ExecuteTask1
        RJMP	??UART0_RX_interrupt_1
??UART0_RX_interrupt_2:
        RCALL	ExecuteTask2
        RJMP	??UART0_RX_interrupt_1
??UART0_RX_interrupt_3:
        RCALL	ExecuteTask3
        RJMP	??UART0_RX_interrupt_1
??UART0_RX_interrupt_4:
        RCALL	ExecuteTask4
        RJMP	??UART0_RX_interrupt_1
??UART0_RX_interrupt_5:
        RCALL	ExecuteTask5
        RJMP	??UART0_RX_interrupt_1
??UART0_RX_interrupt_6:
        RCALL	ExecuteTask6
        RJMP	??UART0_RX_interrupt_1
??UART0_RX_interrupt_7:
        RCALL	ExecuteTask7
        RJMP	??UART0_RX_interrupt_1
??UART0_RX_interrupt_8:
        RCALL	ExecuteTask8
        RJMP	??UART0_RX_interrupt_1
??UART0_RX_interrupt_9:
        RCALL	ExecuteTask9
??UART0_RX_interrupt_1:
        LDI	R16, `?<Constant "Enter task number: ">`
        CALL	UART_sendstring
        OUT	0x3F, R24
        LD	R16, Y+
        LD	R17, Y+
        LD	R18, Y+
        LD	R19, Y+
        LD	R20, Y+
        LD	R21, Y+
        LD	R22, Y+
        LD	R23, Y+
        LD	R0, Y+
        LD	R1, Y+
        LD	R2, Y+
        LD	R3, Y+
        LD	R30, Y+
        LD	R31, Y+
        LD	R24, Y+
        RETI

        RSEG CODE:CODE:NOROOT(1)
AutonomousMode:
        SUBI	R28, 19
        CALL	LCD_clrscr
        LDI	R17, 0
        LDI	R16, 0
        CALL	LCD_gotoxy
        LDI	R16, ??strTemp
        CALL	DS1820_gettemperature
        SUBI	R16, 0
        BREQ	??AutonomousMode_0
        SUBI	R16, 2
        BREQ	??AutonomousMode_1
        RJMP	??AutonomousMode_2
??AutonomousMode_0:
        LDI	R16, 0
        STS	??strTemp, R16
        RJMP	??AutonomousMode_2
??AutonomousMode_1:
        CALL	DS1820_startconverttemp
??AutonomousMode_2:
        LDI	R16, ??strTemp
        CALL	LCD_print
        MOV	R16, R28
        SUBI	R16, 246
        CALL	DS1307_gettime
        LDI	R17, 0
        LDI	R16, 6
        CALL	LCD_gotoxy
        MOV	R16, R28
        SUBI	R16, 246
        CALL	LCD_print
        LDI	R17, 1
        LDI	R16, 0
        CALL	LCD_gotoxy
        CALL	KEY_getkey
        CALL	KEY_getkeyname
        TST	R16
        BREQ	??AutonomousMode_3
        CALL	LCD_printchar
??AutonomousMode_3:
        LDI	R17, 1
        LDI	R16, 3
        CALL	LCD_gotoxy
        LDI	R16, 0
        CALL	ADC_get
        MOV	R18, R28
        SUBI	R18, 251
        CALL	ShortToString
        MOV	R16, R28
        SUBI	R16, 251
        CALL	LCD_print
        LDI	R17, 1
        LDI	R16, 9
        CALL	LCD_gotoxy
        LDI	R16, 1
        CALL	ADC_get
        MOV	R18, R28
        CALL	ShortToString
        MOV	R16, R28
        CALL	LCD_print
        LDS	R16, ??ledCount
        LDI	R20, 3
        CALL	?UC_DIVMOD_L01
        TST	R20
        BRNE	??AutonomousMode_4
        IN	R16, 0x12
        MOV	R17, R16
        SBRS	R17, 4
        SBI	0x12, 0x04
??AutonomousMode_5:
        SBRC	R17, 4
        CBI	0x12, 0x04
??AutonomousMode_6:
        IN	R16, 0x12
        MOV	R17, R16
        SBRS	R17, 5
        SBI	0x12, 0x05
??AutonomousMode_7:
        SBRC	R17, 5
        CBI	0x12, 0x05
??AutonomousMode_8:
        IN	R16, 0x12
        MOV	R17, R16
        SBRS	R17, 7
        SBI	0x12, 0x07
??AutonomousMode_9:
        SBRC	R17, 7
        CBI	0x12, 0x07
??AutonomousMode_4:
        LDI	R30, ??ledCount
        LDI	R31, 0
        LD	R16, Z
        INC	R16
        ST	Z, R16
        SUBI	R28, 237
        RET

        RSEG TINY_Z:DATA:NOROOT(0)
        REQUIRE `?<Segment init: TINY_Z>`
??strTemp:
        DS 5

        RSEG TINY_Z:DATA:NOROOT(0)
        REQUIRE `?<Segment init: TINY_Z>`
??ledCount:
        DS 1

        RSEG CODE:CODE:NOROOT(1)
main:
        SBI	0x11, 0x04
        SBI	0x11, 0x05
        SBI	0x11, 0x07
        CALL	I2C_init
        CALL	SPI_init
        CALL	LCD_init
        CALL	LCD_clrscr
        LDI	R16, 15
        LDI	R17, 0
        CALL	UART_init
        SEI
        CALL	DS1820_startconverttemp
        LDI	R16, LOW(UartMessage)
        LDI	R17, (UartMessage) >> 8
        CALL	UART_sendstring_flash
        RCALL	OutputStartLCDMessage
        LDI	R16, `?<Constant "Enter task number: ">`
        CALL	UART_sendstring
        LDI	R16, 244
        LDI	R17, 1
        CALL	Beep
        LDI	R16, 6
        LDI	R17, 39
        CALL	delay_func_ms
??main_0:
        RCALL	AutonomousMode
        LDI	R16, 0
        CALL	SHIFT_write
        LDI	R16, 206
        LDI	R17, 7
        CALL	delay_func_ms
        RJMP	??main_0

        COMMON INTVEC:CODE:ROOT(1)
        ORG 44
`??INTVEC 44`:
        JMP	UART0_RX_interrupt

        RSEG TINY_ID:CODE:NOROOT(0)
`?<Initializer for <Constant "Enter task number`:
        DB "Enter task number: "

        RSEG INITTAB:CODE:NOROOT(0)
`?<Segment init: TINY_I>`:
        DW	SFE(TINY_I) - SFB(TINY_I)
        DW	SFB(TINY_I)
        DW	SFB(TINY_ID)
        REQUIRE ?need_segment_init

        RSEG INITTAB:CODE:NOROOT(0)
`?<Segment init: TINY_Z>`:
        DW	SFE(TINY_Z) - SFB(TINY_Z)
        DW	SFB(TINY_Z)
        DW	0
        REQUIRE ?need_segment_init

        RSEG SWITCH:CODE:NOROOT(1)
`?<Jumptable for UART0_RX_interrupt>_0`:
        DB	1
        DB	0
        DW	(??UART0_RX_interrupt_1) /2
        DW	9
        DW	(??UART0_RX_interrupt_0) /2
        DW	(??UART0_RX_interrupt_2) /2
        DW	(??UART0_RX_interrupt_3) /2
        DW	(??UART0_RX_interrupt_4) /2
        DW	(??UART0_RX_interrupt_5) /2
        DW	(??UART0_RX_interrupt_6) /2
        DW	(??UART0_RX_interrupt_7) /2
        DW	(??UART0_RX_interrupt_8) /2
        DW	(??UART0_RX_interrupt_9) /2

        RSEG TINY_I:DATA:NOROOT(0)
        REQUIRE `?<Segment init: TINY_I>`
`?<Constant "Enter task number: ">`:
        DS 20
        REQUIRE `?<Initializer for <Constant "Enter task number`

        ASEGN ABSOLUTE:DATA:NOROOT,032H
// union <unnamed> volatile __io _A_PORTD
_A_PORTD:
        DS 1

        ASEGN ABSOLUTE:DATA:NOROOT,031H
// union <unnamed> volatile __io _A_DDRD
_A_DDRD:
        DS 1

        ASEGN ABSOLUTE:DATA:NOROOT,01cH
__?EECR:

        ASEGN ABSOLUTE:DATA:NOROOT,01dH
__?EEDR:

        ASEGN ABSOLUTE:DATA:NOROOT,01eH
__?EEARL:

        ASEGN ABSOLUTE:DATA:NOROOT,01fH
__?EEARH:

        END
// 
//     2 bytes in segment ABSOLUTE
// 1 006 bytes in segment CODE
//    12 bytes in segment INITTAB
//     4 bytes in segment INTVEC
//   300 bytes in segment NEAR_F
//    24 bytes in segment SWITCH
//    20 bytes in segment TINY_I
//    20 bytes in segment TINY_ID
//     6 bytes in segment TINY_Z
// 
// 1 350 bytes of CODE memory (+ 16 bytes shared)
//    26 bytes of DATA memory (+  2 bytes shared)
//
//Errors: none
//Warnings: none
