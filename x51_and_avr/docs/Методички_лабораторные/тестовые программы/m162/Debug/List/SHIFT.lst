##############################################################################
#                                                                            #
#                                                      22/Apr/2006  01:58:06 #
# IAR Atmel AVR C/C++ Compiler V4.12A/W32, Evaluation Version                #
# Copyright 1996-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Source file  =  F:\Projects\VitalyIgorevich\Packet\src\m162\SHIFT.c     #
#    Command line =  F:\Projects\VitalyIgorevich\Packet\src\m162\SHIFT.c     #
#                    --cpu=m162 -ms -o F:\Projects\VitalyIgorevich\Packet\sr #
#                    c\m162\Debug\Obj\ -lCN F:\Projects\VitalyIgorevich\Pack #
#                    et\src\m162\Debug\List\ -y --initializers_in_flash -z9  #
#                    --cross_call_passes=2 --debug -e -I "E:\Program         #
#                    Files\IAR Systems\Embedded Workbench 4.0                #
#                    Evaluation\avr\INC\" -I "E:\Program Files\IAR           #
#                    Systems\Embedded Workbench 4.0                          #
#                    Evaluation\avr\INC\CLIB\" --eeprom_size 512             #
#    List file    =  F:\Projects\VitalyIgorevich\Packet\src\m162\Debug\List\ #
#                    SHIFT.lst                                               #
#    Object file  =  F:\Projects\VitalyIgorevich\Packet\src\m162\Debug\Obj\S #
#                    HIFT.r90                                                #
#                                                                            #
#                                                                            #
##############################################################################

F:\Projects\VitalyIgorevich\Packet\src\m162\SHIFT.c
      1          #include "SHIFT.h"

   \                                 In segment ABSOLUTE, at 0x32
   \   union <unnamed> volatile __io _A_PORTD
   \                     _A_PORTD:
   \   00000000                      DS 1

   \                                 In segment ABSOLUTE, at 0x31
   \   union <unnamed> volatile __io _A_DDRD
   \                     _A_DDRD:
   \   00000000                      DS 1
      2          #include "SPI.h"
      3          
      4          // Функция записи байта в сдвиговый регистр 74595

   \                                 In segment CODE, align 2, keep-with-next
      5          void SHIFT_write(const unsigned char w_data)
   \                     SHIFT_write:
      6          {
      7          	SPI_rw(w_data);
   \   00000000   ........           CALL    SPI_rw
      8          	ST_DDR = 1;
   \   00000004   9A8C               SBI     0x11, 0x04
      9          	ST_PORT = 1;
   \   00000006   9A94               SBI     0x12, 0x04
     10          	ST_PORT = 0;
   \   00000008   9894               CBI     0x12, 0x04
     11          }
   \   0000000A   9508               RET

   Maximum stack usage in bytes:

     Function    CSTACK RSTACK
     --------    ------ ------
     SHIFT_write     0      2
       -> SPI_rw     0      2


   Segment part sizes:

     Function/Label Bytes
     -------------- -----
     _A_PORTD          1
     _A_DDRD           1
     SHIFT_write      12

 
  2 bytes in segment ABSOLUTE
 12 bytes in segment CODE
 
 12 bytes of CODE memory
  0 bytes of DATA memory (+ 2 bytes shared)

Errors: none
Warnings: none
